name: Deploy to Dev Env.

concurrency: DEV

on:
  push:
    branches:
      - dev

jobs:
  generate_changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      CHANGELOG: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get From Tag
        id: fromTag
        run: |
          from_tag=$(git describe --tags --abbrev=0 $(git rev-parse --verify refs/remotes/origin/dev))
          echo "TAG=$from_tag" >> $GITHUB_OUTPUT

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configurationJson: |
            {
              "categories": [
                {
                    "title": "## üöÄ Features",
                    "labels": ["feat"]
                },
                {
                    "title": "## üêõ Fixes",
                    "labels": ["fix", "hotfix"]
                },
                {
                    "title": "## üõ†Ô∏è Chores",
                    "labels": ["chores"]
                },
                {
                    "title": "## üìÅ Other",
                    "labels": []
                }
              ],
              "pr_template": "- #{{TITLE}}",
              "ignore_labels": ["release-commit"],
              "label_extractor": [
                {
                  "pattern": ".*(feat|fix|chore|hotfix):.*",
                  "on_property": "title",
                  "target": "$1"
                },
                {
                  "pattern": "(release-commit)",
                  "on_property": "title",
                  "target": "$1"
                }
              ],
              "transformers": [
                {
                  "pattern": "^(.+): \\[(.+)\\] - (.+)$",
                  "target": "- $2: $3"
                }
              ]
            }
          commitMode: true
          toTag: ${{ github.sha }}
          fromTag: ${{ steps.fromTag.outputs.TAG }}
          token: ${{ secrets.DIPLO_BOT_TOKEN }}

  deploy_to_dev:
    name: Deploy to Dev
    uses: ./.github/workflows/setup_project.yml
    needs: generate_changelog
    with:
      BRANCH: ${{ github.ref_name }}
      DEPLOY: true
      ENVIRONMENT: DEV
    secrets: inherit

  watch_for_deploy_status:
    name: Watch For Deployment Status
    uses: ./.github/workflows/watch_workflow_steps_status.yml
    needs: generate_changelog
    with:
      JOB_NAME: Deploy to Dev / Setup Project
      STEP_NAME: Deploy
      TYPE: DEPLOYMENT
      BRANCH: ${{ github.ref_name }}
      CHANGELOG: ${{ needs.generate_changelog.outputs.CHANGELOG }}
      ENVIRONMENT: DEV
    secrets:
      TOKEN: ${{ secrets.DIPLO_BOT_TOKEN }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
