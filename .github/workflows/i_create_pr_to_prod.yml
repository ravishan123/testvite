name: Create PR to Prod
on:
  pull_request:
    branches: [next]
    types:
      - labeled

jobs:
  create_pr:
    name: Creating PR to Prod
    runs-on: ubuntu-latest
    environment: NEXT
    if: contains(github.event.pull_request.labels.*.name, 'RELEASE TO PROD') && github.event.pull_request.state == 'closed' && github.event.pull_request.base.ref == 'next'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get App Name
        id: displayName
        run: |
          display_name=$(npm pkg get displayName)
          if [[ "$display_name" == "{}" ]] || [[ -z "$display_name" ]]; then
            display_name=$(npm pkg get name)
          fi
          echo "NAME=$(echo "${display_name//\"}" | tr '[:lower:]' '[:upper:]')" >> $GITHUB_OUTPUT

      - name: Get Latest Tag from Next Branch
        id: fromBranchTag
        run: |
          git fetch --tags
          from_tag=$(git describe --tags --abbrev=0 $(git rev-parse --verify refs/remotes/origin/prod))
          echo "FROM_TAG=$from_tag" >> $GITHUB_OUTPUT

      - name: Get Latest Tag from Prod Branch
        id: toBranchTag
        run: |
          to_tag=$(git describe --tags --abbrev=0 $(git rev-parse --verify refs/remotes/origin/next))
          echo "TO_TAG=$to_tag" >> $GITHUB_OUTPUT

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configurationJson: |
            {
              "template": "Hey Peeps!\n\nWe have deployed **${{ steps.displayName.outputs.NAME }}** to the **Production** environment successfully! 🎉\n\nBelow mentioned tickets were deployed.\n\n#{{CHANGELOG}}\n\nThank you to everyone who contributed to making this deployment a success.\n\nThank you, \n DevOps, \n SmashTaps",
              "categories": [
                {
                    "title": "## 🚀 Features",
                    "labels": ["feat"]
                },
                {
                    "title": "## 🐛 Fixes",
                    "labels": ["fix", "hotfix"]
                },
                {
                    "title": "## 🛠️ Chores",
                    "labels": ["chores"]
                },
                {
                    "title": "## 📁 Other",
                    "labels": []
                }
              ],
              "label_extractor": [
                {
                  "pattern": ".*(feat|fix|chore|hotfix):.*",
                  "on_property": "title",
                  "target": "$1"
                }
              ],
              "transformers": [
                {
                  "pattern": "^(.+): \\[(.+)\\] - (.+)\n(.+?[\\-\\*] )(.+)$",
                  "target": "- $2: $3 ($5)"
                }
              ]
            }
          fromTag: ${{ steps.fromBranchTag.outputs.FROM_TAG }}
          toTag: ${{ steps.toBranchTag.outputs.TO_TAG }}
          token: ${{ secrets.DIPLO_BOT_TOKEN }}

      - name: Replace String in PR Title
        id: prTitle
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_TITLE=${PR_TITLE/'-NEXT-'/'-PROD-'}
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_OUTPUT

      - name: Create PR
        env:
          GITHUB_TOKEN: ${{ secrets.DIPLO_BOT_TOKEN }}
        run: |
          gh pr create \
            --base prod \
            --head ${{ github.event.pull_request.base.ref }} \
            --title "${{ steps.prTitle.outputs.PR_TITLE }}" \
            --body "${{ steps.changelog.outputs.changelog }}" \
            --reviewer ${{ github.event.pull_request.requested_reviewers }}